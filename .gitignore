# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so
*.pyd

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
pytestdebug.log

# Translations
*.mo
*.pot
*.po

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
doc/_build/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
# According to Python .gitignore team, it is strongly recommended to include Pipfile.lock in version control.
# Pipfile

# PEP 582; __pypackages__ directory
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site/

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype
.pytype/

# Cython debug symbols
cython_debug/

# Editor specific metadata (keeping existing and adding common ones)
.vscode/
*.f90.swp
.idea/
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store
Thumbs.db

# Fortran module files (keeping from original, in case Fortran code is still around)
*.mod
*.smod

# Compiled Object files (keeping from original - might be relevant for C extensions or old Fortran code)
*.slo
*.lo
*.o
*.obj

# Compiled Dynamic libraries (keeping from original)
# *.so # Already covered by C extensions
*.dylib
*.dll

# Compiled Static libraries (keeping from original)
*.lai
*.la
*.a
*.lib

# Executables (keeping general ones)
*.exe
# *.out # Can conflict with generic output files, better to be specific if needed
*.app

# Build directories (general, keeping existing)
# /build*/ # Covered by 'build/'
/_*/

# External dependencies directory (keeping from original, if used)
# ext/

# If subprojects are no longer part of this repo directly, they can be removed.
# mctc-lib/
# toml-f/

# CMake files (remove if CMake is not used for Python part)
# Commenting out CMake specific, can be uncommented if needed for C extensions
# CMakeFiles/*
# *.cmake
# src/CMakeFiles/*
# src/*.cmake
# config/CMakeFiles/*
# config/CMakeFiles/progress.marks
# src/Makefile

# QCxMS specific output files (add more as identified)
qmdata
*.dat # General data files, can be too broad, but often used for output
# *.log # General log files, also covered above by Django, can be too broad
pfrag
sumreac*
de_*
drrho_*
ircmode_*
allfrags.dat
peaks.csv
*.hess # ORCA hessian file
orca.gbw
orca.prop
orca.bibtex
orca.property.txt
orca.engrad
orca.xtbrestart
xtbrestart
wbo
charges # XTB charges file
# Add other specific output files that are generated during runs
cresterror.out
msreact.out
hessian
opt.xyz
xtbopt.log
xtbopt.xyz
xtbhess.xyz
xtbtopo.mol
.xtboptok
energy # gxtb output
.GRAD
.HESS
coord # cefine output
SPLIT/ # crest -splitfile output
MSDIR/ # crest --msreact output
# Output files from main.py tests
test.xyz
dummy_ensemble.xyz
dummy_nice.xyz
# Output files from iomod.py tests
iomod_test_dir/
# Output files from cid.py tests
ecoll_iso_*.dat
ecoll_frag_*.dat
# Output files from iee.py tests
eimp.dat
```
